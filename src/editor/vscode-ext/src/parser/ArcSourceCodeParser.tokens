PLUS=1
MINUS=2
MULTIPLY=3
DIVIDE=4
MODULO=5
BITWISE_AND=6
BITWISE_OR=7
BITWISE_LSHIFT=8
BITWISE_RSHIFT=9
BITWISE_XOR=10
BITWISE_NOT=11
COMP_OBJ_EQ=12
COMP_REF_EQ=13
COMP_OBJ_NEQ=14
COMP_REF_NEQ=15
COMP_LT=16
COMP_GT=17
COMP_LTE=18
COMP_GTE=19
LOGICAL_AND=20
LOGICAL_OR=21
LOGICAL_NOT=22
ASSIGN=23
ASSIGN_IF_NULL=24
SELF_INCREMENT=25
SELF_DECREMENT=26
INCREASE_BY=27
DECREASE_BY=28
MULTIPLY_BY=29
DIVIDE_BY=30
MOD_BY=31
LPAREN=32
RPAREN=33
LBRACKET=34
RBRACKET=35
LBRACE=36
RBRACE=37
QUESTION=38
SEMICOLON=39
RANGE=40
AT=41
COMMA=42
PIPE=43
NULL_COALESCING=44
COLON=45
DOT=46
ARROW=47
OPTIONAL_CHAIN=48
SCOPE=49
KW_IF=50
KW_ELIF=51
KW_ELSE=52
KW_WHILE=53
KW_FOR=54
KW_LOOP=55
KW_FOREACH=56
KW_IN=57
KW_BREAK=58
KW_CONTINUE=59
KW_RETURN=60
KW_THROW=61
KW_TRY=62
KW_CATCH=63
KW_FINALLY=64
KW_MATCH=65
KW_CASE=66
KW_GET=67
KW_SET=68
KW_DEFAULT=69
KW_AWAIT=70
KW_ASYNC=71
KW_FUNCTION=72
KW_GROUP=73
KW_FIELD=74
KW_CONSTRUCTOR=75
KW_DESTRUCTOR=76
KW_OPERATOR=77
KW_PUBLIC=78
KW_INTERNAL=79
KW_PROTECTED=80
KW_PRIVATE=81
KW_STATIC=82
KW_CONSTANT=83
KW_VARIABLE=84
KW_VALUE=85
KW_REFERENCE=86
KW_CLONE=87
KW_CALL=88
KW_NEW=89
KW_DEFER=90
KW_MACRO=91
KW_NAMESPACE=92
KW_LINK=93
KW_TRUE=94
KW_FALSE=95
KW_NONE=96
KW_ANY=97
KW_INFER=98
KW_CHAR=99
KW_BOOL=100
KW_BYTE=101
KW_INT=102
KW_DECIMAL=103
KW_STRING=104
KW_DISPOSE=105
KW_WITH=106
KW_LIFETIME=107
KW_TYPEOF=108
KW_SELF=109
KW_ENUM=110
LITERAL_STRING=111
WHITESPACE=112
LINE_COMMENT=113
IDENTIFIER=114
NUMBER=115
'+'=1
'-'=2
'*'=3
'/'=4
'%'=5
'&'=6
'|'=7
'<<'=8
'>>'=9
'^'=10
'~'=11
'=='=12
'==='=13
'<>'=14
'<!>'=15
'<'=16
'>'=17
'<='=18
'>='=19
'&&'=20
'||'=21
'!'=22
'='=23
'??='=24
'++'=25
'--'=26
'+='=27
'-='=28
'*='=29
'/='=30
'%='=31
'('=32
')'=33
'['=34
']'=35
'{'=36
'}'=37
'?'=38
';'=39
'..'=40
'@'=41
','=42
'|>'=43
'??'=44
':'=45
'.'=46
'=>'=47
'?.'=48
'::'=49
'if'=50
'elif'=51
'else'=52
'while'=53
'for'=54
'loop'=55
'foreach'=56
'in'=57
'break'=58
'continue'=59
'return'=60
'throw'=61
'try'=62
'catch'=63
'finally'=64
'match'=65
'case'=66
'get'=67
'set'=68
'default'=69
'await'=70
'async'=71
'func'=72
'group'=73
'field'=74
'constructor'=75
'destructor'=76
'operator'=77
'public'=78
'internal'=79
'protected'=80
'private'=81
'static'=82
'const'=83
'var'=84
'val'=85
'ref'=86
'clone'=87
'call'=88
'new'=89
'defer'=90
'macro'=91
'namespace'=92
'link'=93
'true'=94
'false'=95
'none'=96
'any'=97
'infer'=98
'char'=99
'bool'=100
'byte'=101
'int'=102
'decimal'=103
'string'=104
'dispose'=105
'with'=106
'lifetime'=107
'typeof'=108
'self'=109
'enum'=110
